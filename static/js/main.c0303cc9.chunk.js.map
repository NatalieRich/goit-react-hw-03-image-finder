{"version":3,"sources":["components/styles.module.css","components/Searchbar.js","services/pixabay-api.js","components/Modal.js","components/ImageGalleryItem.js","components/Button.js","components/Loader.js","components/ImageGallery.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Searchbar","state","imageName","handleNameChange","event","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","props","onSubmit","className","s","this","SearchForm","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","name","autoComplete","autoFocus","placeholder","onChange","Component","api","fetchImage","page","fetch","then","response","ok","json","Promise","reject","Error","modalRoot","document","querySelector","Modal","handleKeyDown","e","code","console","log","onClose","handleBackdropClick","target","window","addEventListener","removeEventListener","src","alt","createPortal","Overlay","onClick","width","ImageGallaryItem","showModal","toggleModal","largeImageURL","ImageGalleryItem","ImageGalleryItemImage","Button","onClickLoadMore","LoaderImage","color","height","timeout","ImageGallery","images","error","status","currentPage","prevState","setTimeout","scrollBy","top","documentElement","clientHeight","behavior","prevProps","prevName","nextName","prevPage","nextPage","serchImage","ImageAPI","hits","map","image","webformatURL","tags","id","App","handleFormSubmit","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c0303cc9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"styles_App__3DmK1\",\"Searchbar\":\"styles_Searchbar__1eFFw\",\"SearchForm\":\"styles_SearchForm__2OLZB\",\"SearchFormButton\":\"styles_SearchFormButton__2ldPa\",\"SearchFormButtonLabel\":\"styles_SearchFormButtonLabel__fAB64\",\"SearchFormInput\":\"styles_SearchFormInput__2gXSD\",\"SearchForm-input\":\"styles_SearchForm-input__36xSf\",\"ImageGallery\":\"styles_ImageGallery__3CA3z\",\"ImageGalleryItem\":\"styles_ImageGalleryItem__3CCKf\",\"ImageGalleryItemImage\":\"styles_ImageGalleryItemImage__zCdm8\",\"Overlay\":\"styles_Overlay__a-7Sy\",\"Modal\":\"styles_Modal__2tHac\",\"Button\":\"styles_Button__2N-Ms\"};","import { Component } from 'react';\r\nimport s from './styles.module.css'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default class Searchbar extends Component {\r\n  state = {\r\n    imageName: '',\r\n  }\r\n\r\n  handleNameChange = event => {\r\n    this.setState({ imageName: event.currentTarget.value.toLowerCase() });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    this.props.onSubmit(this.state.imageName);\r\n    this.setState({ imageName: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n<header className={s.Searchbar}>\r\n        <form onSubmit={this.handleSubmit} className={s.SearchForm}>\r\n    <button type=\"submit\" className={s.SearchFormButton} >\r\n      <span className={s.SearchFormButtonLabel} >Search</span>\r\n    </button>\r\n\r\n    <input\r\n      className={s.SearchFormInput}\r\n      type=\"text\"\r\n      name='imageName'\r\n      autoComplete=\"off\"\r\n      autoFocus\r\n      placeholder=\"Search images and photos\"\r\n      value={this.state.imageName}\r\n      onChange={this.handleNameChange}\r\n    />\r\n  </form>\r\n</header> \r\n    )\r\n  }\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired\r\n}\r\n\r\n","// https://pixabay.com/api/?q=что_искать&page=номер_страницы&key=627768-661cfbe979deec03db122c1ac&image_type=photo&orientation=horizontal&per_page=12\r\n\r\nfunction fetchImage(name, page ) {\r\n  return fetch(`https://pixabay.com/api/?q=${name}&page=${page}&key=627768-661cfbe979deec03db122c1ac&image_type=photo&orientation=horizontal&per_page=12`)\r\n        .then(response => {\r\n    if (response.ok) {\r\n      return response.json();\r\n    }\r\n    return Promise.reject(new Error(`There is no photo ${name}`));\r\n  });\r\n}\r\n\r\nconst api = {\r\n  fetchImage,\r\n};\r\n\r\nexport default api;","import  React, { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport s from './styles.module.css'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport default class Modal extends Component {\r\n  \r\n  componentDidMount() {\r\n    console.log('Modal componentDidMount');\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    console.log('Modal componentWillUnmount');\r\n    window.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      console.log('Нажали ESC, нужно закрыть модалку');\r\n\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  handleBackdropClick = event => {\r\n    if (event.currentTarget === event.target) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {src, alt} = this.props\r\n    return createPortal(\r\n      <div className={s.Overlay} onClick={this.handleBackdropClick}>\r\n  <div className={s.Modal}>\r\n    <img src={src} alt={alt} width='800' />\r\n  </div>\r\n</div>,\r\n      modalRoot,\r\n    );\r\n  }\r\n}\r\n\r\nModal.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  src: PropTypes.string.isRequired,\r\n  alt: PropTypes.string.isRequired,\r\n}","import React, { Component } from 'react';\r\nimport s from './styles.module.css'\r\nimport Modal from './Modal'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport default class ImageGallaryItem extends Component {\r\n  state = {\r\n    showModal: false,\r\n  }\r\n\r\n  toggleModal = () => {\r\n    this.setState(({ showModal }) => ({\r\n      showModal: !showModal,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { src, alt, largeImageURL } = this.props;\r\n    const { showModal } = this.state;\r\n    return (\r\n      <li className={s.ImageGalleryItem}>\r\n        <img\r\n          src={src}\r\n          alt={alt}\r\n          className={s.ImageGalleryItemImage}\r\n          onClick={this.toggleModal}\r\n        />\r\n        {showModal && (\r\n          <Modal onClose={this.toggleModal} src={largeImageURL} alt={alt} />\r\n        )}\r\n      </li>\r\n  );\r\n  }\r\n}\r\n\r\nImageGallaryItem.propTypes = {\r\n  src: PropTypes.string.isRequired,\r\n  alt: PropTypes.string.isRequired,\r\n  largeImageURL: PropTypes.string.isRequired,\r\n  key: PropTypes.string.isRequired,\r\n}\r\n\r\n\r\n","import s from './styles.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Button({ onClickLoadMore }) {\r\n  return (\r\n    <>\r\n      <button type=\"button\"\r\n              className={s.Button}\r\n              onClick={onClickLoadMore}>\r\n        Load more\r\n      </button>\r\n    </>\r\n  );\r\n}\r\n\r\nButton.propTypes = {\r\n  onClickLoadMore: PropTypes.func.isRequired,\r\n};\r\n\r\n","import {Component} from 'react'\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nexport default class LoaderImage extends Component {\r\n  \r\n  render() {\r\n    return (\r\n      <Loader\r\n        type=\"Puff\"\r\n        color=\"#00BFFF\"\r\n        height={100}\r\n        width={100}\r\n        timeout={3000} //3 secs\r\n      />\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport ImageAPI from '../services/pixabay-api'\r\nimport ImageGallaryItem from './ImageGalleryItem'\r\nimport s from './styles.module.css'\r\nimport Button from './Button'\r\nimport LoaderImage from './Loader'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default class ImageGallery extends Component {\r\n  state = {\r\n    images: [],\r\n    error: null,\r\n    status: 'idle',\r\n    currentPage: 1,\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const prevName = prevProps.imageName;\r\n    const nextName = this.props.imageName;\r\n    const prevPage = prevState.currentPage;\r\n    const nextPage = this.state.currentPage;\r\n\r\n\r\n    if (prevName !== nextName) {\r\n      this.setState({images: [],  status: 'pending' });  \r\n    }\r\n\r\n    if (prevName !== nextName || prevPage !== nextPage) {\r\n      this.serchImage (nextName, nextPage)\r\n    }\r\n\r\n  }\r\n\r\n  serchImage(nextName, nextPage) {\r\n    this.setState(console.log(nextName))\r\n    ImageAPI\r\n      .fetchImage(nextName, nextPage)\r\n      .then(images => {\r\n        this.setState(prevState => ({\r\n          images: [...prevState.images, ...images.hits],\r\n          status: 'resolved',\r\n      }))})\r\n  }\r\n  \r\n  onClickLoadMore = () => {\r\n    \r\n    this.setState(prevState => ({\r\n      currentPage: prevState.currentPage + 1,\r\n    }));\r\n    \r\n    setTimeout(() => {\r\n      window.scrollBy({\r\n        top: document.documentElement.clientHeight - 160,\r\n        behavior: 'smooth',\r\n      });\r\n    }, 1000);\r\n  };\r\n\r\n  render() {\r\n    const { images, status } = this.state;\r\n    \r\n    if (status === 'idle') {\r\n      return <div>Enter what you are looking for</div>;\r\n    }\r\n    if (status === 'pending') {\r\n      return <LoaderImage />;\r\n    }\r\n        \r\n    if (status === 'resolved') {\r\n      return <>\r\n        <ul className={s.ImageGallery}>\r\n          {images &&\r\n            images.map(image => {\r\n              return (\r\n                <ImageGallaryItem\r\n                  src={image.webformatURL}\r\n                  alt={image.tags}\r\n                  largeImageURL={image.largeImageURL}\r\n                  key={image.id}\r\n                />\r\n              );\r\n            })}\r\n        </ul>\r\n        <Button onClickLoadMore={this.onClickLoadMore} />;\r\n      </>\r\n    }\r\n  }\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  imageName: PropTypes.string.isRequired\r\n}\r\n\r\n","import { Component } from 'react';\nimport './App.css';\nimport Searchbar from './components/Searchbar'\nimport ImageGallery from './components/ImageGallery'\n\n\nexport default class App extends Component {\n  state= {\n    imageName: '',\n  }\n\n  handleFormSubmit = (imageName) => {\n    this.setState({ imageName});\n  };\n\n\n\n  render() {\n  return (\n    <div className=\"App\">\n      <Searchbar onSubmit={this.handleFormSubmit} />\n      <ImageGallery imageName={this.state.imageName}/>\n     \n    </div>\n  );\n  }\n}\n\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}